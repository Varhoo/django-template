---
- import_tasks: local.yml

- name: Check docker and httpd on host
  command: systemctl status docker httpd

- name: Check user {{ user }}
  command: id {{ user }}

- name: Copy image {{image}} to server
  copy: src={{image}} dest=/tmp/{{image}}

- name: Delete build image
  file: path={{image}} state=absent
  delegate_to: localhost

- name: Info about running docker instance
  shell: docker inspect {{proj}}:latest
  register: result
  ignore_errors: yes

- debug: var=result.stdout_lines

- name: Rename old image by tag
  command: docker tag "{{proj}}:latest" "{{proj}}:{{timestamp.stdout}}"
  when: result.rc == 0

- name: Load {{proj}} image
  command: docker load -i /tmp/{{image}}

- name: Remove old instance {{proj}}
  shell: docker rm {{proj}}.backup || true
  when: result.rc == 0

- name: Stop old instance {{proj}}
  shell: docker stop {{proj}}.prod || true

- name: Backup old instance
  shell: docker rename {{proj}}.prod {{proj}}.backup || true

- name: Create storage for static and content
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{home}}/storage"
    - "{{home}}/static"

- name: Run new instance of {{ proj }}
# --link {{db}}:postgresql.docker \
  command: docker run -d -p 127.0.0.1:{{ http_port }}:80 \
           --restart=unless-stopped \
           -v {{ home }}/static:{{ docker_home }}/static:Z \
           -v {{ home }}/storage:{{ docker_home }}/storage:Z \
           --name {{ proj }}.prod {{ proj }}

- name: remove docker {{proj}} image
  command: rm /tmp/{{image}}

- name: Show all {{ proj }} imags
  command: docker images {{ proj }}
  register: images

- debug: var=images.stdout_lines
